{"version":3,"sources":["common/components/BasicButton.js","common/components/H1.js","common/components/H2.js","common/components/ProtectedRoute.js","common/components/Nav.js","common/components/ClickyGem.js","pages/Login/GemGrid.js","AppData.js","pages/Login/Login.js","pages/Login/index.js","pages/Dashboard/Dashboard.js","pages/Dashboard/index.js","utils.js","pages/Drinks/Drinks.js","pages/Drinks/index.js","pages/Weight/Weight.js","pages/Weight/index.js","common/colors.js","App.js","serviceWorker.js","index.js"],"names":["BasicButton","styled","button","_templateObject","H1","h1","H1_templateObject","H2","h2","H2_templateObject","ProtectedRoute","_ref","isAuthed","props","Object","objectWithoutProperties","react_default","a","createElement","react_router","to","NavItems","ul","Nav_templateObject","StyledListItem","li","_templateObject2","activeRoute","StyledLink","Link","_templateObject3","withRouter","routes","map","route","key","path","location","pathname","display","Gem","ClickyGem_templateObject","color","hex","borderWidth","darken","size","activeColor","ClickyGem","Color","onClick","reverse","children","Grid","div","GemGrid_templateObject","GemGrid","toConsumableArray","Array","keys","i","value","addToCurrentOrder","AppDataContext","React","createContext","withAppData","Component","Consumer","appData","assign","TitleContainer","Login_templateObject","PageContainer","Login_templateObject2","ResultContainer","Login_templateObject3","Login","history","_useState","useState","_useState2","slicedToArray","currentOrder","setCurrentOrder","_useState3","_useState4","areOrdersEqual","setAreOrdersEqual","correctOrder","setIsAuthed","useEffect","isEqual","setTimeout","push","components_H1","components_BasicButton","number","concat","Dashboard","DEFAULT_TRACKER_VALUE","drinks","exercise","exerciseNotes","getUpdateValueForDate","date","trackerValues","patch","objectSpread","updateDate","firebase","database","ref","update","baseSquareColor","DrinkContainer","Drinks_templateObject","lighten","Drinks","Date","currentDate","setCurrentDate","dateKey","moment","format","toString","components_H2","entry_default","onChange","updateValue","week","arguments","length","undefined","weekMoment","startOfWeek","startOf","endOfWeek","endOf","filter","trackerKey","trackerMoment","isSameOrBefore","isSameOrAfter","reduce","acc","curr","defineProperty","getWeekOf","react_calendar_heatmap_umd_default","startDate","endDate","values","count","tooltipDataAttrs","data-tip","classForValue","classValue","Math","ceil","dist_default","RadioContainer","Weight_templateObject","Weight","increment","setIncrement","previousDayDateKey","subtract","defaultWeight","setWeight","diff","weight","toFixed","react_chartkick_esm","min","data","appBackground","Body","App_templateObject","AppContainer","App_templateObject2","ROUTE_DASHBOARD","ROUTE_DRINKS","ROUTE_WEIGHT","NAV_ROUTES","Boolean","window","hostname","match","ReactDOM","render","isDbConnected","setIsDbConnected","_useState5","_useState6","setTrackerValues","dataCallback","val","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","on","off","console","log","react_router_dom","baseName","Provider","components_Nav","exact","component","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.99469793.chunk.js","sourcesContent":["import styled from 'styled-components';\n\nconst BasicButton = styled.button`\n    background: transparent;\n    padding: 8px 20px;\n    border: 3px solid #000;\n`;\n\nexport default BasicButton;\n","import styled from 'styled-components';\n\nconst H1 = styled.h1`\n    font-size: 32px;\n    line-height: 2;\n`;\n\nexport default H1;\n","import styled from 'styled-components';\n\nconst H2 = styled.h2`\n    font-size: 24px;\n`;\n\nexport default H2;\n","import React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\n\nexport default function ProtectedRoute({ isAuthed, ...props }) {\n    return (\n        isAuthed\n            ? <Route {...props} />\n            : <Redirect to=\"/\" />\n    )\n}\n","import React from 'react';\nimport { withRouter } from 'react-router-dom';\nimport styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nconst NavItems = styled.ul`\n    list-style: none;\n`;\n\nconst StyledListItem = styled.li`\n    display: inline-block;\n    font-style: ${props => props.activeRoute ? 'italic' : 'normal'}\n`;\n\nconst StyledLink = styled(Link)`\n    margin-right: 1rem;\n    font-size: 1.25rem;\n    line-height: 1.4;\n`;\n\nfunction Nav(props) {\n    return (\n        <nav>\n            <NavItems>\n                {\n                    props.routes.map(route => (\n                        <StyledListItem key={route.path} activeRoute={route.path === props.location.pathname}>\n                            <StyledLink\n                                to={route.path}\n                            >\n                                {route.display}\n                            </StyledLink>\n                        </StyledListItem>\n                    ))\n                }\n            </NavItems>\n        </nav>\n    );\n}\n\nexport default withRouter(Nav);\n","import React from 'react';\nimport styled from 'styled-components';\nimport Color from 'color';\n\n\nconst Gem = styled.button`\n    background-color: ${props => props.color.hex()};\n    border-width: ${props => props.borderWidth};\n    border-style: solid;\n    border-top-color: ${props => props.color.darken(0.5).hex()};\n    border-right-color: ${props => props.color.darken(0.6).hex()};\n    border-left-color: ${props => props.color.darken(0.3).hex()};\n    border-bottom-color: ${props => props.color.darken(0.4).hex()};\n    height: ${props => props.size};\n    width: ${props => props.size};\n    color: #fff;\n    display: inline-flex;\n    align-item: center;\n    justify-content: center;\n\n    &:active {\n        background-color: ${props => props.activeColor.hex()};\n        border-top-color: ${props => props.activeColor.darken(0.5).hex()};\n        border-right-color: ${props => props.activeColor.darken(0.6).hex()};\n        border-left-color: ${props => props.activeColor.darken(0.3).hex()};\n        border-bottom-color: ${props => props.activeColor.darken(0.4).hex()};\n    }\n`;\n\nexport default function ClickyGem(props) {\n    const color = Color(props.color || '#96fbff');\n    const activeColor = Color(props.activeColor || '#ffb711');\n    const size = props.size || '100px';\n    const borderWidth = props.borderWidth || '10px';\n\n    return (\n        <Gem\n            onClick={props.onClick}\n            color={props.reverse ? activeColor : color}\n            activeColor={props.reverse ? color : activeColor}\n            size={size}\n            borderWidth={borderWidth}\n        >{props.children}</Gem>\n    );\n}\n","import React from 'react';\nimport styled from 'styled-components';\nimport { ClickyGem } from '../../common/components/';\n\nconst Grid = styled.div`\n    display: grid;\n    grid-template-columns: 1fr 1fr 1fr;\n    grid-gap: 20px;\n    max-width: 340px;\n`;\n\nexport default function GemGrid(props) {\n    return (\n        <Grid>\n            {\n                [...(new Array(9)).keys()].map(i => (\n                    <ClickyGem\n                        key={i}\n                        value={i}\n                        onClick={() => props.addToCurrentOrder(i)}\n                    />\n                ))\n            }\n        </Grid>\n    )\n}\n","import React from 'react';\n\nexport const AppDataContext = React.createContext();\n\nexport const withAppData = Component => props => (\n    <AppDataContext.Consumer>\n        {appData => <Component appData={appData} {...props} />}\n    </AppDataContext.Consumer>\n);\n","import React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport isEqual from 'lodash/isEqual';\nimport GemGrid from './GemGrid';\nimport { BasicButton, H1 } from '../../common/components';\nimport { withAppData } from '../../AppData';\n\nconst TitleContainer = styled.div`\n    display: flex;\n    justify-content: space-between;\n`;\n\nconst PageContainer = styled.div`\n    max-width: 340px;\n`;\n\nconst ResultContainer = styled.div`\n    font-size: 24px;\n    text-align: center;\n    min-height: 40px;\n`;\n\nfunction Login({ appData, history }) {\n    const [currentOrder, setCurrentOrder] = useState([]);\n    const [areOrdersEqual, setAreOrdersEqual] = useState(false);\n    const correctOrder = [1, 4, 3, 5];\n    const { setIsAuthed, isAuthed } = appData;\n\n    function addToCurrentOrder(number) {\n        setCurrentOrder([...currentOrder, number]);\n    }\n\n    function resetCurrentOrder() {\n        setCurrentOrder([]);\n    }\n\n    useEffect(() => {\n        if (isEqual(currentOrder, correctOrder)) {\n            setAreOrdersEqual(true);\n            setTimeout(() => {\n                setIsAuthed(true);\n            }, 1000);\n        } else {\n            setAreOrdersEqual(false);\n        }\n    }, [currentOrder, correctOrder, setIsAuthed])\n\n    useEffect(() => {\n        if (isAuthed) {\n            history.push('/dashboard');\n        }\n    }, [isAuthed, history]);\n\n    return (\n        <PageContainer>\n            <TitleContainer>\n                <H1>Login</H1>\n                <BasicButton onClick={resetCurrentOrder}>Reset</BasicButton>\n            </TitleContainer>\n            <ResultContainer>\n                {\n                    areOrdersEqual\n                        ? 'User Authorized. Redirecting...'\n                        : currentOrder.map((value, i) => <span key={i}>*</span>)\n                }\n            </ResultContainer>\n            <GemGrid\n                addToCurrentOrder={\n                    isEqual(currentOrder, correctOrder) ? () => { } : addToCurrentOrder\n                }\n            />\n        </PageContainer>\n    );\n}\n\nexport default withAppData(Login);\n","import Login from './Login';\n\nexport default Login;\n","import React from 'react';\n\nfunction Dashboard() {\n    return <div>Dashboard!</div>;\n}\n\nexport default Dashboard;\n","import Dashboard from './Dashboard';\n\nexport default Dashboard;\n","import moment from 'moment';\n\nconst DEFAULT_TRACKER_VALUE = {\n    drinks: 0,\n    exercise: false,\n    exerciseNotes: '',\n};\n\n/**\n * @param   {string}  date           'YYYYMMDD'\n * @param   {object}  trackerValues\n * @param   {object}  update\n *\n * @return  {object}\n */\nexport function getUpdateValueForDate(date, trackerValues, patch) {\n    return {\n        ...DEFAULT_TRACKER_VALUE,\n        ...(trackerValues[date] || {}),\n        ...patch,\n    };\n}\n\nexport function updateToday(firebase, trackerValues, patch) {\n    const today = moment().format('YYYYMMDD');\n\n    firebase\n        .database()\n        .ref('/20190630')\n        .update(getUpdateValueForDate(today.toString(), trackerValues, patch));\n}\n\nexport function updateDate(firebase, date, trackerValues, patch) {\n    firebase\n        .database()\n        .ref(`/${date}`)\n        .update(getUpdateValueForDate(date, trackerValues, patch));\n}\n\nexport function getWeekOf(trackerValues, week = null) {\n    const weekMoment = week ? moment(week, 'YYYYMMDD') : moment();\n    const startOfWeek = moment(weekMoment).startOf('week');\n    const endOfWeek = moment(weekMoment).endOf('week');\n\n    const validKeys = Object.keys(trackerValues).filter(trackerKey => {\n        const trackerMoment = moment(trackerKey, 'YYYYMMDD');\n        return trackerMoment.isSameOrBefore(endOfWeek) && trackerMoment.isSameOrAfter(startOfWeek);\n    });\n\n    return validKeys.reduce((acc, curr) => {\n        return { ...acc, [curr]: trackerValues[curr] };\n    }, {})\n}\n","import React, { useState, useEffect } from 'react';\nimport * as firebase from \"firebase/app\";\nimport styled from 'styled-components';\nimport Color from 'color';\nimport moment from 'moment';\nimport CalendarHeatmap from 'react-calendar-heatmap';\nimport DatePicker from 'react-date-picker';\nimport 'react-calendar-heatmap/dist/styles.css';\nimport { withAppData } from '../../AppData';\nimport { H1, H2, ClickyGem } from '../../common/components';\nimport { getWeekOf, updateDate } from '../../utils';\nimport ReactTooltip from 'react-tooltip';\n\nconst baseSquareColor = new Color('#f5cccc');\n\nconst DrinkContainer = styled.div`\n    .react-calendar-heatmap .color-empty { fill: ${baseSquareColor.lighten(0.05).hex()} }\n    .react-calendar-heatmap .color-scale-0 { fill: ${baseSquareColor.hex()} }\n    .react-calendar-heatmap .color-scale-1 { fill: ${baseSquareColor.darken(0.2).hex()} }\n    .react-calendar-heatmap .color-scale-2 { fill: ${baseSquareColor.darken(0.4).hex()} }\n    .react-calendar-heatmap .color-scale-3 { fill: ${baseSquareColor.darken(0.6).hex()} }\n    .react-calendar-heatmap .color-scale-4 { fill: ${baseSquareColor.darken(0.8).hex()} }\n    .react-calendar-heatmap .color-scale-5 { fill: ${baseSquareColor.darken(1).hex()} }\n`;\n\nfunction Drinks({ appData }) {\n    const { trackerValues } = appData;\n    const [currentDate, setCurrentDate] = useState(new Date());\n    const dateKey = moment(currentDate).format('YYYYMMDD').toString();\n\n    useEffect(() => {\n        updateDate(firebase, dateKey, trackerValues, {\n            drinks: (trackerValues[dateKey] && trackerValues[dateKey]['drinks']) || 0\n        });\n    }, [currentDate, trackerValues, dateKey])\n\n    function increaseCurrentDate() {\n        const updateValue = (trackerValues[dateKey] && trackerValues[dateKey]['drinks']) || 0;\n        updateDate(firebase, dateKey, trackerValues, {\n            drinks: updateValue + 1,\n        });\n    };\n\n    function decreaseCurrentDate() {\n        const updateValue = (trackerValues[dateKey] && trackerValues[dateKey]['drinks']) || 0;\n        updateDate(firebase, dateKey, trackerValues, {\n            drinks: (updateValue - 1 >= 0) ? updateValue - 1 : 0,\n        });\n    };\n\n    return (\n        <DrinkContainer>\n            <H1>Drinks</H1>\n            <section>\n                <H2>Update {moment(currentDate).format('MMMM DD')}</H2>\n                <DatePicker\n                    value={currentDate}\n                    onChange={setCurrentDate}\n                />\n                <p>{(trackerValues[dateKey] && trackerValues[dateKey]['drinks']) || 0}</p>\n                <ClickyGem color=\"#cf234b\" activeColor=\"#d36eff\" onClick={decreaseCurrentDate} />\n                <ClickyGem color=\"#23cf45\" activeColor=\"#dbf536\" onClick={increaseCurrentDate} />\n            </section>\n            <hr />\n            <section>\n                <H2>This Week</H2>\n                {\n                    Object.keys(getWeekOf(trackerValues)).map(\n                        value => (\n                            <li key={value}>\n                                <strong>{moment(value, 'YYYYMMDD').format('dddd, [the] Do')}:</strong> {trackerValues[value].drinks}\n                            </li>\n                        )\n                    )\n                }\n            </section>\n            <hr />\n            <CalendarHeatmap\n                startDate={new Date('2019-01-01')}\n                endDate={new Date()}\n                values={\n                    Object.keys(trackerValues)\n                        .map(trackerKey => ({\n                            date: moment(trackerKey).format('YYYY-MM-DD').toString(),\n                            count: trackerValues[trackerKey].drinks,\n                        }))\n                }\n                tooltipDataAttrs={value => {\n                    return value.date\n                        ? { 'data-tip': `${value.date}: ${value.count} drink(s)` }\n                        : { 'data-tip': 'No data for this date' };\n                }}\n                classForValue={(value) => {\n                    if (!value) {\n                        return 'color-empty';\n                    }\n\n                    const classValue = Math.ceil(value.count / 3);\n                    return `color-scale-${classValue}`;\n                }}\n            />\n            <ReactTooltip />\n        </DrinkContainer>\n    );\n}\n\nexport default withAppData(Drinks);\n","import Drinks from './Drinks';\n\nexport default Drinks;\n","import React, { useState } from 'react';\nimport styled from 'styled-components';\nimport * as firebase from \"firebase/app\";\nimport DatePicker from 'react-date-picker';\nimport moment from 'moment';\nimport { H1, ClickyGem } from '../../common/components';\nimport { withAppData } from '../../AppData';\nimport { updateDate } from '../../utils';\nimport { LineChart } from 'react-chartkick';\nimport 'chart.js';\n\nconst RadioContainer = styled.div`\n    display: flex;\n    justify-content: space-around;\n    margin: 1rem 0;\n`;\n\nfunction Weight({ appData }) {\n    const { trackerValues } = appData;\n    const [currentDate, setCurrentDate] = useState(new Date());\n    const [increment, setIncrement] = useState(0.2);\n    const dateKey = moment(currentDate).format('YYYYMMDD').toString();\n    const previousDayDateKey = moment(currentDate).subtract(1, 'days').format('YYYYMMDD').toString();\n    const defaultWeight = (trackerValues[previousDayDateKey] && trackerValues[previousDayDateKey]['weight']) || 240;\n\n    function setWeight(diff) {\n        const updateValue = (trackerValues[dateKey] && trackerValues[dateKey]['weight']) || defaultWeight;\n        updateDate(firebase, dateKey, trackerValues, {\n            weight: updateValue + diff,\n        });\n    };\n    return (\n        <div>\n            <H1>Weight</H1>\n            <DatePicker\n                value={currentDate}\n                onChange={setCurrentDate}\n            />\n            <RadioContainer>\n                <ClickyGem onClick={() => setIncrement(0.2)} size=\"50px\" reverse={increment === 0.2}>0.2</ClickyGem>\n                <ClickyGem onClick={() => setIncrement(0.4)} size=\"50px\" reverse={increment === 0.4}>0.4</ClickyGem>\n                <ClickyGem onClick={() => setIncrement(1)} size=\"50px\" reverse={increment === 1}>1.0</ClickyGem>\n            </RadioContainer>\n            <div>\n                <ClickyGem onClick={() => setWeight(-increment)} color=\"#cf234b\" activeColor=\"#d36eff\" size=\"50px\" />\n                    {((trackerValues[dateKey] && trackerValues[dateKey]['weight']) || defaultWeight).toFixed(1) }\n                <ClickyGem onClick={() => setWeight(increment)} color=\"#23cf45\" activeColor=\"#dbf536\" size=\"50px\" />\n            </div>\n\n            <LineChart\n                min={180}\n                data={\n                    Object.keys(trackerValues).reduce((acc, curr) => {\n                        if (trackerValues[curr]['weight']) {\n                            const key = moment(curr).format('YYYY-MM-DD');\n                            return { ...acc, [key]: trackerValues[curr]['weight'] };\n                        }\n                        return acc;\n                    }, {})\n                }\n            />\n        </div>\n    );\n}\n\nexport default withAppData(Weight);\n","import Weight from './Weight';\n\nexport default Weight;\n","import Color from 'color';\n\nexport const appBackground = Color('#f8edfc');\nexport const containerBackground = Color('#f1f1f1');\n","\nimport React, { useState, useEffect } from 'react';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport * as firebase from \"firebase/app\";\nimport \"firebase/database\";\nimport styled from 'styled-components';\nimport Login from './pages/Login'\nimport Dashboard from './pages/Dashboard'\nimport Drinks from './pages/Drinks'\nimport Weight from './pages/Weight'\nimport { appBackground } from './common/colors';\nimport { ProtectedRoute, Nav } from './common/components';\nimport { AppDataContext } from './AppData';\nimport { updateDate } from './utils';\n\nconst Body = styled.div`\n    background: ${appBackground.hex()};\n    position: absolute;\n    top: 0;\n    right: 0;\n    left: 0;\n    bottom: 0;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n`;\n\nconst AppContainer = styled.div`\n    max-width: 340px;\n    max-height: 600px;\n    height: 100%;\n    width: 100%;\n`;\n\nconst ROUTE_DASHBOARD = {\n    path: '/dashboard',\n    display: 'Dashboard',\n};\n\nconst ROUTE_DRINKS = {\n    path: '/drinks',\n    display: 'Drinks',\n};\n\nconst ROUTE_WEIGHT = {\n    path: '/weight',\n    display: 'Weight',\n};\n\nconst NAV_ROUTES = [\n    ROUTE_DASHBOARD,\n    ROUTE_DRINKS,\n    ROUTE_WEIGHT,\n];\n\nexport default function App() {\n    const [isAuthed, setIsAuthed] = useState(false);\n    const [isDbConnected, setIsDbConnected] = useState(false);\n    const [trackerValues, setTrackerValues] = useState({});\n\n    useEffect(() => {\n        function dataCallback(data) {\n            setTrackerValues(data.val());\n        }\n\n        const firebaseConfig = {\n            apiKey: \"AIzaSyCqkGjaPgMGjQ8lWHb4U9MHANgp5FONbaU\",\n            authDomain: \"life-tracker-a6834.firebaseapp.com\",\n            databaseURL: \"https://life-tracker-a6834.firebaseio.com\",\n            projectId: \"life-tracker-a6834\",\n            storageBucket: \"\",\n            messagingSenderId: \"547043946587\",\n            appId: \"1:547043946587:web:59f5d04b173eab62\"\n        };\n        firebase.initializeApp(firebaseConfig);\n        setIsDbConnected(true);\n\n        updateDate(firebase, '20190630', trackerValues, { drinks: 0 });\n\n        firebase.database().ref('/').on('value', dataCallback);\n\n        return () => {\n            firebase.database().ref('/').off('value', dataCallback);\n        };\n    }, []);\n\n    console.log(trackerValues);\n    return (\n        <Router\n            baseName={process.env.NODE_ENV === 'production' ? '/life-tracker' : '/'}\n        >\n            <AppDataContext.Provider\n                value={{\n                    isAuthed,\n                    setIsAuthed,\n                    isDbConnected,\n                    trackerValues,\n                }}\n            >\n                <Body>\n                    <AppContainer>\n                        {isAuthed ? <Nav routes={NAV_ROUTES} /> : null }\n                        <Route exact path=\"/\" component={Login} />\n                        <ProtectedRoute isAuthed={isAuthed} path={ROUTE_DRINKS.path} component={Drinks} />\n                        <ProtectedRoute isAuthed={isAuthed} path={ROUTE_DASHBOARD.path} component={Dashboard} />\n                        <ProtectedRoute isAuthed={isAuthed} path={ROUTE_WEIGHT.path} component={Weight} />\n                    </AppContainer>\n                </Body>\n            </AppDataContext.Provider>\n        </Router>\n    );\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport './reset.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}