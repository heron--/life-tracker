{"version":3,"sources":["common/components/BasicButton.js","common/components/H1.js","common/components/H2.js","common/components/ProtectedRoute.js","common/components/Nav.js","common/components/ClickyGem.js","pages/Login/GemGrid.js","AppData.js","pages/Login/Login.js","pages/Login/index.js","utils.js","pages/Drinks/Drinks.js","pages/Drinks/index.js","pages/Dashboard/Dashboard.js","pages/Dashboard/index.js","common/colors.js","App.js","serviceWorker.js","index.js"],"names":["BasicButton","styled","button","_templateObject","H1","h1","H1_templateObject","H2","h2","H2_templateObject","ProtectedRoute","_ref","isAuthed","props","Object","objectWithoutProperties","react_default","a","createElement","react_router","to","NavItems","ul","Nav_templateObject","StyledListItem","li","_templateObject2","StyledLink","Link","_templateObject3","Nav","routes","map","route","key","path","display","Gem","ClickyGem_templateObject","color","hex","darken","activeColor","ClickyGem","Color","onClick","Grid","div","GemGrid_templateObject","GemGrid","toConsumableArray","Array","keys","i","value","addToCurrentOrder","AppDataContext","React","createContext","withAppData","Component","Consumer","appData","assign","TitleContainer","Login_templateObject","PageContainer","Login_templateObject2","ResultContainer","Login_templateObject3","Login","history","_useState","useState","_useState2","slicedToArray","currentOrder","setCurrentOrder","_useState3","_useState4","areOrdersEqual","setAreOrdersEqual","correctOrder","setIsAuthed","useEffect","isEqual","setTimeout","push","components_H1","components_BasicButton","number","concat","DEFAULT_TRACKER_VALUE","drinks","weight","exercise","exerciseNotes","getUpdateValueForDate","date","trackerValues","patch","objectSpread","updateDate","firebase","database","ref","update","baseSquareColor","DrinkContainer","Drinks_templateObject","Drinks","Date","currentDate","setCurrentDate","dateKey","moment","format","toString","components_H2","entry_default","onChange","updateValue","week","arguments","length","undefined","weekMoment","startOfWeek","startOf","endOfWeek","endOf","filter","trackerKey","trackerMoment","isSameOrBefore","isSameOrAfter","reduce","acc","curr","defineProperty","getWeekOf","react_calendar_heatmap_umd_default","startDate","endDate","values","count","classForValue","classValue","Math","ceil","Dashboard","appBackground","Body","App_templateObject","AppContainer","App_templateObject2","ROUTE_DRINKS","ROUTE_DASHBOARD","NAV_ROUTES","Boolean","window","location","hostname","match","ReactDOM","render","isDbConnected","setIsDbConnected","_useState5","_useState6","setTrackerValues","dataCallback","data","val","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","on","off","console","log","react_router_dom","Provider","components_Nav","exact","component","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.654d6612.chunk.js","sourcesContent":["import styled from 'styled-components';\n\nconst BasicButton = styled.button`\n    background: transparent;\n    padding: 8px 20px;\n    border: 3px solid #000;\n`;\n\nexport default BasicButton;\n","import styled from 'styled-components';\n\nconst H1 = styled.h1`\n    font-size: 32px;\n    line-height: 2;\n`;\n\nexport default H1;\n","import styled from 'styled-components';\n\nconst H2 = styled.h2`\n    font-size: 24px;\n`;\n\nexport default H2;\n","import React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\n\nexport default function ProtectedRoute({ isAuthed, ...props }) {\n    return (\n        isAuthed\n            ? <Route {...props} />\n            : <Redirect to=\"/\" />\n    )\n}\n","import React from 'react';\nimport styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nconst NavItems = styled.ul`\n    list-style: none;\n`;\n\nconst StyledListItem = styled.li`\n    display: inline-block;\n`;\n\nconst StyledLink = styled(Link)`\n    margin-right: 1rem;\n    font-size: 1.25rem;\n    line-height: 1.4;\n`;\n\nfunction Nav(props) {\n    return (\n        <nav>\n            <NavItems>\n                {\n                    props.routes.map(route => (\n                        <StyledListItem key={route.path}>\n                            <StyledLink to={route.path}>{route.display}</StyledLink>\n                        </StyledListItem>\n                    ))\n                }\n            </NavItems>\n        </nav>\n    );\n}\n\nexport default Nav;\n","import React from 'react';\nimport styled from 'styled-components';\nimport Color from 'color';\n\nconst defaultBorderWidth = '10px';\n\n\nconst Gem = styled.button`\n    background-color: ${props => props.color.hex()};\n    border-width: ${defaultBorderWidth};\n    border-style: solid;\n    border-top-color: ${props => props.color.darken(0.5).hex()};\n    border-right-color: ${props => props.color.darken(0.6).hex()};\n    border-left-color: ${props => props.color.darken(0.3).hex()};\n    border-bottom-color: ${props => props.color.darken(0.4).hex()};\n    height: 100px;\n    width: 100px;\n\n    &:active {\n        background-color: ${props => props.activeColor.hex()};\n        border-top-color: ${props => props.activeColor.darken(0.5).hex()};\n        border-right-color: ${props => props.activeColor.darken(0.6).hex()};\n        border-left-color: ${props => props.activeColor.darken(0.3).hex()};\n        border-bottom-color: ${props => props.activeColor.darken(0.4).hex()};\n    }\n`;\n\nexport default function ClickyGem(props) {\n    const color = Color(props.color || '#96fbff');\n    const activeColor = Color(props.activeColor || '#ffb711');\n\n    return <Gem onClick={props.onClick} color={color} activeColor={activeColor} />;\n}\n","import React from 'react';\nimport styled from 'styled-components';\nimport { ClickyGem } from '../../common/components/';\n\nconst Grid = styled.div`\n    display: grid;\n    grid-template-columns: 1fr 1fr 1fr;\n    grid-gap: 20px;\n    max-width: 340px;\n`;\n\nexport default function GemGrid(props) {\n    return (\n        <Grid>\n            {\n                [...(new Array(9)).keys()].map(i => (\n                    <ClickyGem\n                        key={i}\n                        value={i}\n                        onClick={() => props.addToCurrentOrder(i)}\n                    />\n                ))\n            }\n        </Grid>\n    )\n}\n","import React from 'react';\n\nexport const AppDataContext = React.createContext();\n\nexport const withAppData = Component => props => (\n    <AppDataContext.Consumer>\n        {appData => <Component appData={appData} {...props} />}\n    </AppDataContext.Consumer>\n);\n","import React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport isEqual from 'lodash/isEqual';\nimport GemGrid from './GemGrid';\nimport { BasicButton, H1 } from '../../common/components';\nimport { withAppData } from '../../AppData';\n\nconst TitleContainer = styled.div`\n    display: flex;\n    justify-content: space-between;\n`;\n\nconst PageContainer = styled.div`\n    max-width: 340px;\n`;\n\nconst ResultContainer = styled.div`\n    font-size: 24px;\n    text-align: center;\n    min-height: 40px;\n`;\n\nfunction Login({ appData, history }) {\n    const [currentOrder, setCurrentOrder] = useState([]);\n    const [areOrdersEqual, setAreOrdersEqual] = useState(false);\n    const correctOrder = [1, 4, 3, 5];\n    const { setIsAuthed, isAuthed } = appData;\n\n    function addToCurrentOrder(number) {\n        setCurrentOrder([...currentOrder, number]);\n    }\n\n    function resetCurrentOrder() {\n        setCurrentOrder([]);\n    }\n\n    useEffect(() => {\n        if (isEqual(currentOrder, correctOrder)) {\n            setAreOrdersEqual(true);\n            setTimeout(() => {\n                setIsAuthed(true);\n            }, 1000);\n        } else {\n            setAreOrdersEqual(false);\n        }\n    }, [currentOrder, correctOrder, setIsAuthed])\n\n    useEffect(() => {\n        if (isAuthed) {\n            history.push('/dashboard');\n        }\n    }, [isAuthed, history]);\n\n    return (\n        <PageContainer>\n            <TitleContainer>\n                <H1>Login</H1>\n                <BasicButton onClick={resetCurrentOrder}>Reset</BasicButton>\n            </TitleContainer>\n            <ResultContainer>\n                {\n                    areOrdersEqual\n                        ? 'User Authorized. Redirecting...'\n                        : currentOrder.map((value, i) => <span key={i}>*</span>)\n                }\n            </ResultContainer>\n            <GemGrid\n                addToCurrentOrder={\n                    isEqual(currentOrder, correctOrder) ? () => { } : addToCurrentOrder\n                }\n            />\n        </PageContainer>\n    );\n}\n\nexport default withAppData(Login);\n","import Login from './Login';\n\nexport default Login;\n","import moment from 'moment';\n\nconst DEFAULT_TRACKER_VALUE = {\n    drinks: 0,\n    weight: null,\n    exercise: false,\n    exerciseNotes: '',\n};\n\n/**\n * @param   {string}  date           'YYYYMMDD'\n * @param   {object}  trackerValues\n * @param   {object}  update\n *\n * @return  {object}\n */\nexport function getUpdateValueForDate(date, trackerValues, patch) {\n    return {\n        ...DEFAULT_TRACKER_VALUE,\n        ...(trackerValues[date] || {}),\n        ...patch,\n    };\n}\n\nexport function updateToday(firebase, trackerValues, patch) {\n    const today = moment().format('YYYYMMDD');\n\n    firebase\n        .database()\n        .ref('/20190630')\n        .update(getUpdateValueForDate(today.toString(), trackerValues, patch));\n}\n\nexport function updateDate(firebase, date, trackerValues, patch) {\n    firebase\n        .database()\n        .ref(`/${date}`)\n        .update(getUpdateValueForDate(date, trackerValues, patch));\n}\n\nexport function getWeekOf(trackerValues, week = null) {\n    const weekMoment = week ? moment(week, 'YYYYMMDD') : moment();\n    const startOfWeek = moment(weekMoment).startOf('week');\n    const endOfWeek = moment(weekMoment).endOf('week');\n\n    const validKeys = Object.keys(trackerValues).filter(trackerKey => {\n        const trackerMoment = moment(trackerKey, 'YYYYMMDD');\n        return trackerMoment.isSameOrBefore(endOfWeek) && trackerMoment.isSameOrAfter(startOfWeek);\n    });\n\n    return validKeys.reduce((acc, curr) => {\n        return { ...acc, [curr]: trackerValues[curr] };\n    }, {})\n}\n","import React, { useState, useEffect } from 'react';\nimport * as firebase from \"firebase/app\";\nimport styled from 'styled-components';\nimport Color from 'color';\nimport moment from 'moment';\nimport CalendarHeatmap from 'react-calendar-heatmap';\nimport DatePicker from 'react-date-picker';\nimport 'react-calendar-heatmap/dist/styles.css';\nimport { withAppData } from '../../AppData';\nimport { H1, H2, ClickyGem } from '../../common/components';\nimport { getWeekOf, updateDate } from '../../utils';\n\nconst baseSquareColor = new Color('#f5cccc');\n\nconst DrinkContainer = styled.div`\n    .react-calendar-heatmap .color-empty { fill: ${baseSquareColor.hex()} }\n    .react-calendar-heatmap .color-scale-0 { fill: ${baseSquareColor.hex()} }\n    .react-calendar-heatmap .color-scale-1 { fill: ${baseSquareColor.darken(0.2).hex()} }\n    .react-calendar-heatmap .color-scale-2 { fill: ${baseSquareColor.darken(0.4).hex()} }\n    .react-calendar-heatmap .color-scale-3 { fill: ${baseSquareColor.darken(0.6).hex()} }\n    .react-calendar-heatmap .color-scale-4 { fill: ${baseSquareColor.darken(0.8).hex()} }\n    .react-calendar-heatmap .color-scale-5 { fill: ${baseSquareColor.darken(1).hex()} }\n`;\n\nfunction Drinks({ appData }) {\n    const { trackerValues } = appData;\n    const [currentDate, setCurrentDate] = useState(new Date());\n    const dateKey = moment(currentDate).format('YYYYMMDD').toString();\n\n    useEffect(() => {\n        updateDate(firebase, dateKey, trackerValues, {\n            drinks: (trackerValues[dateKey] && trackerValues[dateKey]['drinks']) || 0\n        });\n    }, [currentDate, trackerValues, dateKey])\n\n    function increaseCurrentDate() {\n        const updateValue = (trackerValues[dateKey] && trackerValues[dateKey]['drinks']) || 0;\n        updateDate(firebase, dateKey, trackerValues, {\n            drinks: updateValue + 1,\n        });\n    };\n\n    function decreaseCurrentDate() {\n        const updateValue = (trackerValues[dateKey] && trackerValues[dateKey]['drinks']) || 0;\n        updateDate(firebase, dateKey, trackerValues, {\n            drinks: (updateValue - 1 >= 0) ? updateValue - 1 : 0,\n        });\n    };\n\n    return (\n        <DrinkContainer>\n            <H1>Drinks</H1>\n            <section>\n                <H2>Update {moment(currentDate).format('MMMM DD')}</H2>\n                <DatePicker\n                    value={currentDate}\n                    onChange={setCurrentDate}\n                />\n                <p>{(trackerValues[dateKey] && trackerValues[dateKey]['drinks']) || 0}</p>\n                <ClickyGem color=\"#cf234b\" activeColor=\"#d36eff\" onClick={decreaseCurrentDate} />\n                <ClickyGem color=\"#23cf45\" activeColor=\"#dbf536\" onClick={increaseCurrentDate} />\n            </section>\n            <hr />\n            <section>\n                <H2>This Week</H2>\n                {\n                    Object.keys(getWeekOf(trackerValues)).map(\n                        value => (\n                            <li key={value}>\n                                <strong>{moment(value, 'YYYYMMDD').format('dddd, [the] Do')}:</strong> {trackerValues[value].drinks}\n                            </li>\n                        )\n                    )\n                }\n            </section>\n            <hr />\n            <CalendarHeatmap\n                startDate={new Date('2019-01-01')}\n                endDate={new Date()}\n                values={\n                    Object.keys(trackerValues)\n                        .map(trackerKey => ({\n                            date: moment(trackerKey).format('YYYY-MM-DD').toString(),\n                            count: trackerValues[trackerKey].drinks,\n                        }))\n                }\n                classForValue={(value) => {\n                    if (!value) {\n                        return 'color-empty';\n                    }\n\n                    const classValue = Math.ceil(value.count / 3);\n                    return `color-scale-${classValue}`;\n                }}\n            />\n        </DrinkContainer>\n    );\n}\n\nexport default withAppData(Drinks);\n","import Drinks from './Drinks';\n\nexport default Drinks;\n","import React from 'react';\n\nfunction Dashboard() {\n    return <div>Dashboard!</div>;\n}\n\nexport default Dashboard;\n","import Dashboard from './Dashboard';\n\nexport default Dashboard;\n","import Color from 'color';\n\nexport const appBackground = Color('#f8edfc');\nexport const containerBackground = Color('#f1f1f1');\n","\nimport React, { useState, useEffect } from 'react';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport * as firebase from \"firebase/app\";\nimport \"firebase/database\";\nimport styled from 'styled-components';\nimport Login from './pages/Login'\nimport Drinks from './pages/Drinks'\nimport Dashboard from './pages/Dashboard'\nimport { appBackground } from './common/colors';\nimport { ProtectedRoute, Nav } from './common/components';\nimport { AppDataContext } from './AppData';\nimport { updateDate } from './utils';\n\nconst Body = styled.div`\n    background: ${appBackground.hex()};\n    position: absolute;\n    top: 0;\n    right: 0;\n    left: 0;\n    bottom: 0;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n`;\n\nconst AppContainer = styled.div`\n    max-width: 340px;\n    max-height: 600px;\n    height: 100%;\n    width: 100%;\n`;\n\nconst ROUTE_DRINKS = {\n    path: '/drinks',\n    display: 'Drinks',\n};\n\nconst ROUTE_DASHBOARD = {\n    path: '/dashboard',\n    display: 'Dashboard',\n};\n\nconst NAV_ROUTES = [\n    ROUTE_DASHBOARD,\n    ROUTE_DRINKS,\n];\n\nexport default function App() {\n    const [isAuthed, setIsAuthed] = useState(false);\n    const [isDbConnected, setIsDbConnected] = useState(false);\n    const [trackerValues, setTrackerValues] = useState({});\n\n    useEffect(() => {\n        const firebaseConfig = {\n            apiKey: \"AIzaSyCqkGjaPgMGjQ8lWHb4U9MHANgp5FONbaU\",\n            authDomain: \"life-tracker-a6834.firebaseapp.com\",\n            databaseURL: \"https://life-tracker-a6834.firebaseio.com\",\n            projectId: \"life-tracker-a6834\",\n            storageBucket: \"\",\n            messagingSenderId: \"547043946587\",\n            appId: \"1:547043946587:web:59f5d04b173eab62\"\n        };\n        firebase.initializeApp(firebaseConfig);\n        setIsDbConnected(true);\n\n        updateDate(firebase, '20190630', trackerValues, { drinks: 0 });\n\n        function dataCallback(data) {\n            setTrackerValues(data.val());\n        }\n\n        firebase.database().ref('/').on('value', dataCallback);\n\n        return () => {\n            firebase.database().ref('/').off('value', dataCallback);\n        };\n    }, []);\n\n    console.log(trackerValues);\n    return (\n        <Router>\n            <AppDataContext.Provider\n                value={{\n                    isAuthed,\n                    setIsAuthed,\n                    isDbConnected,\n                    trackerValues,\n                }}\n            >\n                <Body>\n                    <AppContainer>\n                        {isAuthed ? <Nav routes={NAV_ROUTES} /> : null }\n                        <Route exact path=\"/\" component={Login} />\n                        <ProtectedRoute isAuthed={isAuthed} path={ROUTE_DRINKS.path} component={Drinks} />\n                        <ProtectedRoute isAuthed={isAuthed} path={ROUTE_DASHBOARD.path} component={Dashboard} />\n                    </AppContainer>\n                </Body>\n            </AppDataContext.Provider>\n        </Router>\n    );\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport './reset.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}